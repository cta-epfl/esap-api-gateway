stages:
  - test
  - build
  - deploy

run-unit-test:
  image: python:latest
  stage: test
  before_script:
    - python3 --version
    - python3 -m venv env
    - source env/bin/activate
    - cd esap
    - pip install -r requirements/base.txt
  script:
    - echo 'Running unit tests'
    - python manage.py test --settings=esap.settings.test -t .
    - echo 'Test succeeded'

# A successful pipeline is needed for merge requests
docker-build-branches:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" esap
  only:
    - merge_requests

docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  # tagged with latest
    - docker build --pull -t "$CI_REGISTRY_IMAGE" esap
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-deploy-adex:
  image: docker:latest
  environment: "adex"
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan dop814.astron.nl >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no sdc@dop814.astron.nl "echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no sdc@dop814.astron.nl "docker pull "$CI_REGISTRY_IMAGE""
    - ssh -o StrictHostKeyChecking=no sdc@dop814.astron.nl "docker-compose -p adex -f /docker_compose/adex/docker-compose.yml up -d"
  when: manual
  only:
    - adex-main

docker-deploy-master:
  image: docker:latest
  environment: "esap"
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan dop814.astron.nl >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no sdc@dop814.astron.nl "echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no sdc@dop814.astron.nl "docker pull "$CI_REGISTRY_IMAGE""
    - ssh -o StrictHostKeyChecking=no sdc@dop814.astron.nl "docker-compose -p esap -f /docker_compose/esap-api-gateway/docker-compose-dev-cd.yml up -d"
  when: manual
  only:
    - master


# deploy acceptance version on 'dop457.astron.nl'
docker-deploy-acceptance:
  image: docker:latest
  environment: "acceptance"
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan dop457.astron.nl >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no vermaas@dop457.astron.nl "echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no vermaas@dop457.astron.nl "docker pull "$CI_REGISTRY_IMAGE""
    - ssh -o StrictHostKeyChecking=no vermaas@dop457.astron.nl "docker-compose -p esap -f /data/docker_compose/docker-compose-esap-acc-cd.yml up -d"
  when: manual
  only:
    - acceptance
