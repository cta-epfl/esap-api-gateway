

# nginx configuration for esap
# note how this connects directly into the esap_api container on port 8000, 
# this is made possible by the docker-compose 'network:' configuration.

upstream web8000 {
  server esap_api:8000;
}


server {
  server_name localhost;

  # inside the container, listen to port 80
  listen 80;
 
  root /shared/public_html;
     
  # Any route that doesn't have a file extension (e.g. /devices)
  location / {
	# nv: this doesn't work, it forwards to the 'welcome to nginx' page.
	#try_files $uri $uri/ /index.html;

	# nv: force everybody to esap-gui for the moment ;-)
	try_files $uri $uri/ /esap-gui/index.html;
    
  # ===== proxy to esap-api on port 8000 =====
  location /esap-api/ {
     proxy_pass http://web8000/esap-api/;
     proxy_set_header Host sdc.astron.nl;
	 proxy_set_header X-Forwarded-For $remote_addr;
  }
  
  # This reflects a change in the Django settings to serve multiple applications: STATIC_URL = '/static_esap/'
  location /static_esap/ {
     proxy_pass http://web8000/static_esap/;
	 proxy_set_header Host sdc.astron.nl;
	 proxy_set_header X-Forwarded-For $remote_addr;	 
  }

  
  location /oidc/ {
     proxy_pass http://web8000/oidc/;
  }

  
  location /static/ {
        alias /static/;
  }

  
  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
      root   /usr/share/nginx/html;
  }

}

