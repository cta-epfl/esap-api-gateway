# nginx configuration for esap
# note how this connects directly into the esap_api container on port 8000,
# this is made possible by the docker-compose 'network:' configuration.

upstream backend {
  # note that this is the container name from the docker-compose.yml, and it uses the internal port because we are on a docker network
  server esap_api:8000;
}

server {
  server_name localhost;

  # inside the container, listen to port 80
  listen 80;

  root /shared/public_html;

  # ===== esap-gui (frontend) configuration =====
  location /esap-gui/ {
	try_files $uri $uri/ /esap-gui/index.html;
  }

  # proxy the /static/ url to the frontend container
  location /static/ {
	 # this proxies all calls to /static/ to the shared static directory (in case of multiple frontends)
	 alias /static/;
  }

  # ===== esap-api (backend) configuration =====
# uncomment when the frontend connects to '/esap-api' instead of to 'https://sdc.astron.nl:5555/esap-api'
  location /esap-api/ {
    proxy_pass http://backend/esap-api/;
#     proxy_set_header Host sdc.astron.nl;
#	    proxy_set_header X-Forwarded-For $remote_addr;
  }

  # This reflects the Django settings to serve multiple applications: STATIC_URL = '/static_esap/'
  location /static_esap/ {
     proxy_pass http://backend/static_esap/;
#  proxy_set_header Host sdc.astron.nl;
#  proxy_set_header X-Forwarded-For $remote_addr;
  }

  location /oidc/ {
     proxy_pass http://backend/oidc/;
  }

  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
      root   /usr/share/nginx/html;
  }
}

