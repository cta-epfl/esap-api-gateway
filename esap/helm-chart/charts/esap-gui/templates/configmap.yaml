apiVersion: v1
kind: ConfigMap
metadata:
  name: esap-nginx
  #namespace: default
data:
  nginx.conf: |
    # nginx configuration for esap
    # note how this connects directly into the esap_api container on port 8000,
    # this is made possible by the docker-compose 'network:' configuration.

    upstream backend {
      # note that this is the container name from the docker-compose.yml, and it uses the internal port because we are on a docker network
      server esap-api:8000;
      # server esap-api.test-cta-cscs.odahub.io:443;
    }

    server {
      server_name localhost;

      # inside the container, listen to port 80
      listen 80;

      # location /health {        
      #   default_type application/json;
      #   return 200 '{"status":"success","result":"nginx test json"}';
      # }

      # root /shared/public_html;
      root /usr/share/nginx/html;

      # location / {
      #   auth_basic "Restricted to CTA";
      #   auth_basic_user_file /etc/nginx/htpasswd;
      # }

      # ===== esap-gui (frontend) configuration =====
      location /esap-gui/ {
            try_files $uri $uri/ /index.html;
      }

      # proxy the /static/ url to the frontend container
      location /static/ {
             # this proxies all calls to /static/ to the shared static directory (in case of multiple frontends)
             alias /usr/share/nginx/html/static/;
      }

      # ===== esap-api (backend) configuration =====
    # uncomment when the frontend connects to '/esap-api' instead of to 'https://sdc.astron.nl:5555/esap-api'
      location /esap-api/ {
        proxy_pass http://backend/esap-api/;
    #     proxy_set_header Host sdc.astron.nl;
    #	    proxy_set_header X-Forwarded-For $remote_addr;
      }

      # This reflects the Django settings to serve multiple applications: STATIC_URL = '/static_esap/'
      location /static_esap/ {
         proxy_pass http://backend/static_esap/;
    #  proxy_set_header Host sdc.astron.nl;
    #  proxy_set_header X-Forwarded-For $remote_addr;
      }

      location /oidc/ {
         proxy_pass http://backend/oidc/;
      }

      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
    }

